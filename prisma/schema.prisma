generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model companies {
  id       Int        @id(map: "companies_pk") @default(autoincrement()) @map("company_id")
  rfc      String     @unique(map: "companies_company_rfc_uindex") @map("company_rfc") @db.NVarChar(12)
  name     String     @db.NVarChar(500)
  prefix   String?    @db.NVarChar(5)
  invoices invoices[]
}

model invoices {
  id                     String    @id(map: "invoices_pk") @map("uuid") @db.NVarChar(36)
  providerID             Int       @map("provider_id")
  companyID              Int       @map("company_id")
  xml                    String    @map("xml_path") @db.NVarChar(200)
  pdf                    String    @map("pdf_path") @db.NVarChar(200)
  isDeleted              Boolean   @default(false)
  date                   DateTime  @map("invoice_date")
  certificationTimestamp DateTime  @map("certification_timestamp")
  company                companies @relation(fields: [companyID], references: [id], onUpdate: NoAction, map: "invoices_companies_company_id_fk")
  provider               providers @relation(fields: [providerID], references: [id], onUpdate: NoAction, map: "invoices_providers_provider_id_fk")
}

model providers {
  id        Int        @id(map: "providers_pk") @default(autoincrement()) @map("provider_id")
  rfc       String     @map("provider_rfc") @db.NVarChar(12)
  name      String     @db.NVarChar(500)
  zipcode   Int?
  userID    Int        @unique @map("user_id")
  isDeleted Boolean    @default(false)
  invoices  invoices[]
  user      users      @relation(fields: [userID], references: [id], onUpdate: NoAction, map: "providers_users_user_id_fk")
}

model userTypes {
  id    Int     @id(map: "user_types_pk") @default(autoincrement()) @map("user_type_id")
  name  String  @db.NVarChar(50)
  users users[]

  @@map("user_types")
}

model users {
  id         Int        @id(map: "users_pk") @default(autoincrement()) @map("user_id")
  email      String     @db.NVarChar(500)
  password   String     @db.NVarChar(300)
  userTypeID Int        @map("user_type_id")
  type       userTypes  @relation(fields: [userTypeID], references: [id], onUpdate: NoAction, map: "FK__users__user_type__17CF3C3F")
  provider   providers?
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model Companies {
  id       Int        @id(map: "companies_pk") @default(autoincrement()) @map("company_id")
  rfc      String     @unique(map: "companies_company_rfc_uindex") @map("company_rfc") @db.NVarChar(12)
  name     String     @db.NVarChar(500)
  prefix   String?    @db.NVarChar(5)
  emails   String?    @db.NVarChar(MAX)
  invoices Invoices[]

  @@map("companies")
}

model Invoices {
  id                     String        @id(map: "invoices_pk") @map("uuid") @db.NVarChar(36)
  providerID             Int           @map("provider_id")
  companyID              Int           @map("company_id")
  xml                    String        @map("xml_path") @db.NVarChar(200)
  pdf                    String        @map("pdf_path") @db.NVarChar(200)
  isDeleted              Boolean       @default(false)
  date                   DateTime      @map("invoice_date")
  certificationTimestamp DateTime      @map("certification_timestamp")
  reference              String        @map("reference") @db.NVarChar(255)
  typeID                 String        @map("document_type_id")
  type                   documentTypes @relation(fields: [typeID], references: [id], onUpdate: NoAction, map: "invoices_document_types_document_type_id_fk")
  company                Companies     @relation(fields: [companyID], references: [id], onUpdate: NoAction, map: "invoices_companies_company_id_fk")
  provider               Providers     @relation(fields: [providerID], references: [id], onUpdate: NoAction, map: "invoices_providers_provider_id_fk")

  @@map("invoices")
}

model Providers {
  id        Int        @id(map: "providers_pk") @default(autoincrement()) @map("provider_id")
  rfc       String     @map("provider_rfc") @db.NVarChar(12)
  name      String     @db.NVarChar(500)
  zipcode   Int?
  userID    Int        @unique @map("user_id")
  isDeleted Boolean    @default(false)
  invoices  Invoices[]
  user      Users      @relation(fields: [userID], references: [id], onUpdate: NoAction, map: "providers_users_user_id_fk")

  @@map("providers")
}

model UserTypes {
  id    Int     @id(map: "user_types_pk") @default(autoincrement()) @map("user_type_id")
  name  String  @db.NVarChar(50)
  users Users[]

  @@map("user_types")
}

model Users {
  id            Int        @id(map: "users_pk") @default(autoincrement()) @map("user_id")
  email         String     @db.NVarChar(500)
  password      String     @db.NVarChar(300)
  userTypeID    Int        @map("user_type_id")
  otp           Int?
  otpExpireDate DateTime?  @map("otp_expire_date")
  type          UserTypes  @relation(fields: [userTypeID], references: [id], onUpdate: NoAction, map: "FK__users__user_type__17CF3C3F")
  provider      Providers?

  @@map("users")
}

model documentTypes {
  id       String     @id(map: "document_types_pk") @map("document_type_id")
  name     String     @db.NVarChar(50)
  invoices Invoices[]

  @@map("document_types")
}

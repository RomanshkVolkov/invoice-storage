generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model Companies {
  id          Int        @id(map: "companies_pk") @default(autoincrement()) @map("company_id")
  rfc         String     @unique(map: "companies_company_rfc_uindex") @map("company_rfc") @db.NVarChar(13)
  name        String     @db.NVarChar(500)
  prefix      String?    @db.NVarChar(5)
  emails      String?    @db.NVarChar(MAX)
  isDeletable Boolean    @default(true) @map("is_deletable")
  isDeleted   Boolean    @default(false) @map("is_deleted")
  invoices    Invoices[]

  @@map("companies")
}

model Invoices {
  id                     String        @id(map: "invoices_pk") @map("uuid") @db.NVarChar(36)
  providerID             Int           @map("provider_id")
  companyID              Int           @map("company_id")
  xml                    String        @map("xml_path") @db.NVarChar(200)
  pdf                    String        @map("pdf_path") @db.NVarChar(200)
  isDeleted              Boolean       @default(false) @map("is_deleted")
  date                   DateTime      @map("invoice_date")
  certificationTimestamp DateTime      @map("certification_timestamp")
  reference              String        @map("reference") @db.NVarChar(255)
  typeID                 String        @map("document_type_id")
  userID                 Int           @map("user_load_id")
  dateLoad               DateTime      @default(now()) @map("date_load")
  type                   DocumentTypes @relation(fields: [typeID], references: [id], onUpdate: NoAction, map: "invoices_document_types_document_type_id_fk")
  company                Companies     @relation(fields: [companyID], references: [id], onUpdate: NoAction, map: "invoices_companies_company_id_fk")
  provider               Providers     @relation(fields: [providerID], references: [id], onUpdate: NoAction, map: "invoices_providers_provider_id_fk")
  user                   Users         @relation(fields: [userID], references: [id], onUpdate: NoAction, map: "invoices_users_user_id_fk")

  @@map("invoices")
}

model UserTypes {
  id    Int     @id(map: "user_types_pk") @default(autoincrement()) @map("user_type_id")
  name  String  @db.NVarChar(50)
  users Users[]

  @@map("user_types")
}

model Providers {
  id        Int             @id(map: "providers_pk") @default(autoincrement()) @map("provider_id")
  rfc       String          @unique @map("provider_rfc") @db.NVarChar(13)
  name      String          @db.NVarChar(500)
  email     String          @db.NVarChar(500)
  zipcode   Int?
  isDeleted Boolean         @default(false) @map("is_deleted")
  invoices  Invoices[]
  users     UserProviders[]

  @@map("providers")
}

model Users {
  id            Int             @id(map: "users_pk") @default(autoincrement()) @map("user_id")
  name          String          @db.NVarChar(500)
  username      String          @db.NVarChar(500)
  email         String          @db.NVarChar(500)
  password      String          @db.NVarChar(300)
  userTypeID    Int             @map("user_type_id")
  otp           Int?
  otpExpireDate DateTime?       @map("otp_expire_date")
  isActive      Boolean?        @default(true) @map("is_active")
  isDeleted     Boolean?        @default(false) @map("is_deleted")
  type          UserTypes       @relation(fields: [userTypeID], references: [id], onUpdate: NoAction, map: "FK__users__user_type__17CF3C3F")
  invoices      Invoices[]
  providers     UserProviders[] @relation(fields: [])

  @@map("users")
}

model UserProviders {
  userID     Int       @map("user_id")
  providerID Int       @map("provider_id")
  users      Users     @relation(fields: [userID], references: [id], onUpdate: NoAction, map: "users_providers_users_user_id_fk")
  providers  Providers @relation(fields: [providerID], references: [id], onUpdate: NoAction, map: "users_providers_providers_provider_id_fk")

  @@id([userID, providerID])
  @@map("users_providers")
}

model DocumentTypes {
  id       String     @id(map: "document_types_pk") @map("document_type_id")
  name     String     @db.NVarChar(50)
  invoices Invoices[]

  @@map("document_types")
}
